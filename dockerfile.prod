
# Dependencias

FROM node:21-alpine3.19 AS deps

WORKDIR /usr/src/app

COPY package.json ./
COPY package-lock.json ./

RUN npm install



# Builder -Construye la aplicación
FROM node:21-alpine3.19 AS build

ARG ORDERS_DATABASE_URL
ENV DATABASE_URL=$ORDERS_DATABASE_URL

RUN echo "database_url" ::: $ORDERS_DATABASE_URL;

WORKDIR /usr/src/app


# Copiar de deps, los módulos de node

COPY --from=deps /usr/src/app/node_modules ./node_modules

# Copiar todo el código fuente de la app
COPY . .



RUN npx prisma migrate deploy

RUN npx prisma generate

# RUN npm run test
RUN npm run build


# Dejar solo las dependencias de production
RUN npm ci -f --only=production && npm cache clean --force


# Crear la imagen final de Docker
FROM node:21-alpine3.19 AS prod


WORKDIR /usr/src/app


COPY --from=build /usr/src/app/node_modules ./node_modules

# Copiar la carpeta de DIST

COPY --from=build /usr/src/app/dist ./dist

COPY --from=build /usr/src/app/generated/prisma ./generated/prisma

ENV NODE_ENV=production

USER node

EXPOSE 3000


CMD [ "node", "dist/main.js" ]